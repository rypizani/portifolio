{"ast":null,"code":"import _construct from\"/Users/ryanpizani/Documents/GitHub/portifolio/node_modules/@babel/runtime/helpers/esm/construct.js\";import _toConsumableArray from\"/Users/ryanpizani/Documents/GitHub/portifolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{Color}from'three/src/math/Color';/**\n * Media query breakpoints\n */export var media={desktop:1600,laptop:1280,tablet:1024,mobile:696,mobileS:320};/**\n * Convert a px string to a number\n */export var pxToNum=function pxToNum(px){return Number(px.replace('px',''));};/**\n * Convert a number to a px string\n */export var numToPx=function numToPx(num){return\"\".concat(num,\"px\");};/**\n * Convert pixel values to rem for a11y\n */export var pxToRem=function pxToRem(px){return\"\".concat(px/16,\"rem\");};/**\n * Convert ms token values to a raw numbers for ReactTransitionGroup\n * Transition delay props\n */export var msToNum=function msToNum(msString){return Number(msString.replace('ms',''));};/**\n * Convert a number to an ms string\n */export var numToMs=function numToMs(num){return\"\".concat(num,\"ms\");};/**\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\n * to a ThreeJS Color class\n */export var rgbToThreeColor=function rgbToThreeColor(rgb){return _construct(Color,_toConsumableArray(rgb.split(' ').map(function(value){return Number(value)/255;})));};","map":{"version":3,"names":["Color","media","desktop","laptop","tablet","mobile","mobileS","pxToNum","px","Number","replace","numToPx","num","concat","pxToRem","msToNum","msString","numToMs","rgbToThreeColor","rgb","_construct","_toConsumableArray","split","map","value"],"sources":["/Users/ryanpizani/Documents/GitHub/portifolio/src/utils/style.js"],"sourcesContent":["import { Color } from 'three/src/math/Color';\n\n/**\n * Media query breakpoints\n */\nexport const media = {\n  desktop: 1600,\n  laptop: 1280,\n  tablet: 1024,\n  mobile: 696,\n  mobileS: 320,\n};\n\n/**\n * Convert a px string to a number\n */\nexport const pxToNum = px => Number(px.replace('px', ''));\n\n/**\n * Convert a number to a px string\n */\nexport const numToPx = num => `${num}px`;\n\n/**\n * Convert pixel values to rem for a11y\n */\nexport const pxToRem = px => `${px / 16}rem`;\n\n/**\n * Convert ms token values to a raw numbers for ReactTransitionGroup\n * Transition delay props\n */\nexport const msToNum = msString => Number(msString.replace('ms', ''));\n\n/**\n * Convert a number to an ms string\n */\nexport const numToMs = num => `${num}ms`;\n\n/**\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\n * to a ThreeJS Color class\n */\nexport const rgbToThreeColor = rgb =>\n  new Color(...rgb.split(' ').map(value => Number(value) / 255));\n"],"mappings":"sQAAA,OAASA,KAAK,KAAQ,sBAAsB,CAE5C;AACA;AACA,GACA,MAAO,IAAM,CAAAC,KAAK,CAAG,CACnBC,OAAO,CAAE,IAAI,CACbC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,GAAG,CACXC,OAAO,CAAE,GACX,CAAC,CAED;AACA;AACA,GACA,MAAO,IAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAGC,EAAE,QAAI,CAAAC,MAAM,CAACD,EAAE,CAACE,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,GAEzD;AACA;AACA,GACA,MAAO,IAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAGC,GAAG,WAAAC,MAAA,CAAOD,GAAG,QAAI,CAExC;AACA;AACA,GACA,MAAO,IAAM,CAAAE,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAGN,EAAE,WAAAK,MAAA,CAAOL,EAAE,CAAG,EAAE,SAAK,CAE5C;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAO,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAGC,QAAQ,QAAI,CAAAP,MAAM,CAACO,QAAQ,CAACN,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,GAErE;AACA;AACA,GACA,MAAO,IAAM,CAAAO,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAGL,GAAG,WAAAC,MAAA,CAAOD,GAAG,QAAI,CAExC;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAM,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAGC,GAAG,SAAAC,UAAA,CAC5BpB,KAAK,CAAAqB,kBAAA,CAAIF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,SAAAC,KAAK,QAAI,CAAAf,MAAM,CAACe,KAAK,CAAC,CAAG,GAAG,GAAC,IAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}