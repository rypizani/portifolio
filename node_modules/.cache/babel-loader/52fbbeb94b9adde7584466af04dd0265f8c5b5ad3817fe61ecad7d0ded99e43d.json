{"ast":null,"code":"import { invariant } from 'hey-listen';\nvar prevTime = 0;\nvar onNextFrame = typeof window !== 'undefined' && window.requestAnimationFrame !== undefined ? function (callback) {\n  return window.requestAnimationFrame(callback);\n} : function (callback) {\n  var timestamp = Date.now();\n  var timeToCall = Math.max(0, 16.7 - (timestamp - prevTime));\n  prevTime = timestamp + timeToCall;\n  setTimeout(function () {\n    return callback(prevTime);\n  }, timeToCall);\n};\nvar createStep = function (setRunNextFrame) {\n  var processToRun = [];\n  var processToRunNextFrame = [];\n  var numThisFrame = 0;\n  var isProcessing = false;\n  var i = 0;\n  var cancelled = new WeakSet();\n  var toKeepAlive = new WeakSet();\n  var renderStep = {\n    cancel: function (process) {\n      var indexOfCallback = processToRunNextFrame.indexOf(process);\n      cancelled.add(process);\n      if (indexOfCallback !== -1) {\n        processToRunNextFrame.splice(indexOfCallback, 1);\n      }\n    },\n    process: function (frame) {\n      var _a;\n      isProcessing = true;\n      _a = [processToRunNextFrame, processToRun], processToRun = _a[0], processToRunNextFrame = _a[1];\n      processToRunNextFrame.length = 0;\n      numThisFrame = processToRun.length;\n      if (numThisFrame) {\n        var process_1;\n        for (i = 0; i < numThisFrame; i++) {\n          process_1 = processToRun[i];\n          process_1(frame);\n          if (toKeepAlive.has(process_1) === true && !cancelled.has(process_1)) {\n            renderStep.schedule(process_1);\n            setRunNextFrame(true);\n          }\n        }\n      }\n      isProcessing = false;\n    },\n    schedule: function (process, keepAlive, immediate) {\n      if (keepAlive === void 0) {\n        keepAlive = false;\n      }\n      if (immediate === void 0) {\n        immediate = false;\n      }\n      invariant(typeof process === \"function\", \"Argument must be a function\");\n      var addToCurrentBuffer = immediate && isProcessing;\n      var buffer = addToCurrentBuffer ? processToRun : processToRunNextFrame;\n      cancelled.delete(process);\n      if (keepAlive) toKeepAlive.add(process);\n      if (buffer.indexOf(process) === -1) {\n        buffer.push(process);\n        if (addToCurrentBuffer) numThisFrame = processToRun.length;\n      }\n    }\n  };\n  return renderStep;\n};\nvar maxElapsed = 40;\nvar defaultElapsed = 1 / 60 * 1000;\nvar useDefaultElapsed = true;\nvar willRunNextFrame = false;\nvar isProcessing = false;\nvar frame = {\n  delta: 0,\n  timestamp: 0\n};\nvar stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nvar setWillRunNextFrame = function (willRun) {\n  return willRunNextFrame = willRun;\n};\nvar steps = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n  acc[key] = createStep(setWillRunNextFrame);\n  return acc;\n}, {});\nvar sync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n  var step = steps[key];\n  acc[key] = function (process, keepAlive, immediate) {\n    if (keepAlive === void 0) {\n      keepAlive = false;\n    }\n    if (immediate === void 0) {\n      immediate = false;\n    }\n    if (!willRunNextFrame) startLoop();\n    step.schedule(process, keepAlive, immediate);\n    return process;\n  };\n  return acc;\n}, {});\nvar cancelSync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n  acc[key] = steps[key].cancel;\n  return acc;\n}, {});\nvar processStep = function (stepId) {\n  return steps[stepId].process(frame);\n};\nvar processFrame = function (timestamp) {\n  willRunNextFrame = false;\n  frame.delta = useDefaultElapsed ? defaultElapsed : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n  if (!useDefaultElapsed) defaultElapsed = frame.delta;\n  frame.timestamp = timestamp;\n  isProcessing = true;\n  stepsOrder.forEach(processStep);\n  isProcessing = false;\n  if (willRunNextFrame) {\n    useDefaultElapsed = false;\n    onNextFrame(processFrame);\n  }\n};\nvar startLoop = function () {\n  willRunNextFrame = true;\n  useDefaultElapsed = true;\n  if (!isProcessing) onNextFrame(processFrame);\n};\nvar getFrameData = function () {\n  return frame;\n};\nexport default sync;\nexport { cancelSync, getFrameData };","map":{"version":3,"names":["invariant","prevTime","onNextFrame","window","requestAnimationFrame","undefined","callback","timestamp","Date","now","timeToCall","Math","max","setTimeout","createStep","setRunNextFrame","processToRun","processToRunNextFrame","numThisFrame","isProcessing","i","cancelled","WeakSet","toKeepAlive","renderStep","cancel","process","indexOfCallback","indexOf","add","splice","frame","_a","length","process_1","has","schedule","keepAlive","immediate","addToCurrentBuffer","buffer","delete","push","maxElapsed","defaultElapsed","useDefaultElapsed","willRunNextFrame","delta","stepsOrder","setWillRunNextFrame","willRun","steps","reduce","acc","key","sync","step","startLoop","cancelSync","processStep","stepId","processFrame","min","forEach","getFrameData"],"sources":["/Users/ryanpizani/Documents/GitHub/portifolio/node_modules/framesync/dist/framesync.es.js"],"sourcesContent":["import { invariant } from 'hey-listen';\n\nvar prevTime = 0;\nvar onNextFrame = typeof window !== 'undefined' && window.requestAnimationFrame !== undefined ? function (callback) {\n    return window.requestAnimationFrame(callback);\n} : function (callback) {\n    var timestamp = Date.now();\n    var timeToCall = Math.max(0, 16.7 - (timestamp - prevTime));\n    prevTime = timestamp + timeToCall;\n    setTimeout(function () {\n        return callback(prevTime);\n    }, timeToCall);\n};\n\nvar createStep = function (setRunNextFrame) {\n    var processToRun = [];\n    var processToRunNextFrame = [];\n    var numThisFrame = 0;\n    var isProcessing = false;\n    var i = 0;\n    var cancelled = new WeakSet();\n    var toKeepAlive = new WeakSet();\n    var renderStep = {\n        cancel: function (process) {\n            var indexOfCallback = processToRunNextFrame.indexOf(process);\n            cancelled.add(process);\n            if (indexOfCallback !== -1) {\n                processToRunNextFrame.splice(indexOfCallback, 1);\n            }\n        },\n        process: function (frame) {\n            var _a;\n            isProcessing = true;\n            _a = [processToRunNextFrame, processToRun], processToRun = _a[0], processToRunNextFrame = _a[1];\n            processToRunNextFrame.length = 0;\n            numThisFrame = processToRun.length;\n            if (numThisFrame) {\n                var process_1;\n                for (i = 0; i < numThisFrame; i++) {\n                    process_1 = processToRun[i];\n                    process_1(frame);\n                    if (toKeepAlive.has(process_1) === true && !cancelled.has(process_1)) {\n                        renderStep.schedule(process_1);\n                        setRunNextFrame(true);\n                    }\n                }\n            }\n            isProcessing = false;\n        },\n        schedule: function (process, keepAlive, immediate) {\n            if (keepAlive === void 0) {\n                keepAlive = false;\n            }\n            if (immediate === void 0) {\n                immediate = false;\n            }\n            invariant(typeof process === \"function\", \"Argument must be a function\");\n            var addToCurrentBuffer = immediate && isProcessing;\n            var buffer = addToCurrentBuffer ? processToRun : processToRunNextFrame;\n            cancelled.delete(process);\n            if (keepAlive) toKeepAlive.add(process);\n            if (buffer.indexOf(process) === -1) {\n                buffer.push(process);\n                if (addToCurrentBuffer) numThisFrame = processToRun.length;\n            }\n        }\n    };\n    return renderStep;\n};\n\nvar maxElapsed = 40;\nvar defaultElapsed = 1 / 60 * 1000;\nvar useDefaultElapsed = true;\nvar willRunNextFrame = false;\nvar isProcessing = false;\nvar frame = {\n    delta: 0,\n    timestamp: 0\n};\nvar stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nvar setWillRunNextFrame = function (willRun) {\n    return willRunNextFrame = willRun;\n};\nvar steps = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    acc[key] = createStep(setWillRunNextFrame);\n    return acc;\n}, {});\nvar sync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    var step = steps[key];\n    acc[key] = function (process, keepAlive, immediate) {\n        if (keepAlive === void 0) {\n            keepAlive = false;\n        }\n        if (immediate === void 0) {\n            immediate = false;\n        }\n        if (!willRunNextFrame) startLoop();\n        step.schedule(process, keepAlive, immediate);\n        return process;\n    };\n    return acc;\n}, {});\nvar cancelSync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nvar processStep = function (stepId) {\n    return steps[stepId].process(frame);\n};\nvar processFrame = function (timestamp) {\n    willRunNextFrame = false;\n    frame.delta = useDefaultElapsed ? defaultElapsed : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    if (!useDefaultElapsed) defaultElapsed = frame.delta;\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (willRunNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nvar startLoop = function () {\n    willRunNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing) onNextFrame(processFrame);\n};\nvar getFrameData = function () {\n    return frame;\n};\n\nexport default sync;\nexport { cancelSync, getFrameData };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}