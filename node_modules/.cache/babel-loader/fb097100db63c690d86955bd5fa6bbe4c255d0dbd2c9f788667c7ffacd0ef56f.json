{"ast":null,"code":"var _jsxFileName = \"/Users/ryanpizani/Documents/GitHub/portifolio/src/components/theme/ThemeProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, createContext } from \"react\";\nimport { LightTheme, DarkTheme } from \"./Themes\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const getInitialMode = () => {\n    if (typeof localStorage === \"undefined\") return true;\n    const isReturningUser = (\"dark\" in localStorage);\n    const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\n    const userPrefersDark = getPrefColorScheme();\n    if (isReturningUser) {\n      return savedMode;\n    }\n    return !!userPrefersDark;\n  };\n  const getPrefColorScheme = () => {\n    if (!window.matchMedia) return;\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  };\n  const [theme, setTheme] = useState(getInitialMode() ? \"dark\" : \"light\");\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n  useEffect(() => {\n    typeof localStorage !== \"undefined\" && localStorage.setItem(\"dark\", JSON.stringify(theme === \"dark\"));\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme === \"light\" ? LightTheme : DarkTheme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeProvider, \"Pkk77J4vbc3z16pZRsvmc/newc8=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","LightTheme","DarkTheme","MuiThemeProvider","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","getInitialMode","localStorage","isReturningUser","savedMode","JSON","parse","getItem","userPrefersDark","getPrefColorScheme","window","matchMedia","matches","theme","setTheme","toggleTheme","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanpizani/Documents/GitHub/portifolio/src/components/theme/ThemeProvider.js"],"sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\nimport { LightTheme, DarkTheme } from \"./Themes\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n    const getInitialMode = () => {\n        if (typeof localStorage === \"undefined\") return true;\n        const isReturningUser = \"dark\" in localStorage;\n        const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\n        const userPrefersDark = getPrefColorScheme();\n        if (isReturningUser) {\n            return savedMode;\n        }\n        return !!userPrefersDark;\n    };\n\n    const getPrefColorScheme = () => {\n        if (!window.matchMedia) return;\n\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    };\n\n    const [theme, setTheme] = useState(getInitialMode() ? \"dark\" : \"light\");\n\n    const toggleTheme = () => {\n        if (theme === \"light\") {\n            setTheme(\"dark\");\n        } else {\n            setTheme(\"light\");\n        }\n    };\n\n    useEffect(() => {\n        typeof localStorage !== \"undefined\" &&\n            localStorage.setItem(\"dark\", JSON.stringify(theme === \"dark\"));\n    }, [theme]);\n\n    return (\n        <ThemeContext.Provider\n            value={{\n                theme,\n                toggleTheme,\n            }}\n        >\n            <MuiThemeProvider\n                theme={theme === \"light\" ? LightTheme : DarkTheme}\n            >\n                {children}\n            </MuiThemeProvider>\n        </ThemeContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AACjE,SAASC,UAAU,EAAEC,SAAS,QAAQ,UAAU;AAChD,SAASC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI,OAAOC,YAAY,KAAK,WAAW,EAAE,OAAO,IAAI;IACpD,MAAMC,eAAe,IAAG,MAAM,IAAID,YAAY;IAC9C,MAAME,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAMC,eAAe,GAAGC,kBAAkB,CAAC,CAAC;IAC5C,IAAIN,eAAe,EAAE;MACjB,OAAOC,SAAS;IACpB;IACA,OAAO,CAAC,CAACI,eAAe;EAC5B,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACC,MAAM,CAACC,UAAU,EAAE;IAExB,OAAOD,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EACpE,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAACW,cAAc,CAAC,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC;EAEvE,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIF,KAAK,KAAK,OAAO,EAAE;MACnBC,QAAQ,CAAC,MAAM,CAAC;IACpB,CAAC,MAAM;MACHA,QAAQ,CAAC,OAAO,CAAC;IACrB;EACJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZ,OAAOa,YAAY,KAAK,WAAW,IAC/BA,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACJ,KAAK,KAAK,MAAM,CAAC,CAAC;EACtE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACIjB,OAAA,CAACC,YAAY,CAACqB,QAAQ;IAClBC,KAAK,EAAE;MACHN,KAAK;MACLE;IACJ,CAAE;IAAAhB,QAAA,eAEFH,OAAA,CAACF,gBAAgB;MACbmB,KAAK,EAAEA,KAAK,KAAK,OAAO,GAAGrB,UAAU,GAAGC,SAAU;MAAAM,QAAA,EAEjDA;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhC,CAAC;AAACvB,EAAA,CA/CWF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}